# Django Settings
DEBUG=False
# Generate a secure key with: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY=your-secure-secret-key-here
ALLOWED_HOSTS=localhost,127.0.0.1,your-domain.com

# Application Settings
COMPANY_NAME=alims.co.in

# Database
# For development (DEBUG=True): SQLite is used by default
# For production (DEBUG=False): PostgreSQL is used
# For Docker, this will be overridden by the environment variable in docker-compose.yml
# For local development with PostgreSQL, uncomment and configure:
DATABASE_URL=postgres://postgres:postgres@db:5432/customer_management

# PostgreSQL fallback configuration (used when DATABASE_URL is not set and DEBUG=False)
DB_NAME=customer_management
DB_USER=postgres
DB_PASSWORD=postgres
DB_HOST=db
DB_PORT=5432

# Email (configure these for production)
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
EMAIL_HOST=smtp.example.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=your_email@example.com
EMAIL_HOST_PASSWORD=your_email_password
DEFAULT_FROM_EMAIL=your_email@example.com
ADMINS=[('Admin Name', 'admin@example.com')]

# Static Files
STATIC_URL=/static/
STATIC_ROOT=staticfiles/
MEDIA_URL=/media/
MEDIA_ROOT=media/

# Security
CSRF_COOKIE_SECURE=True
SESSION_COOKIE_SECURE=True
SECURE_HSTS_SECONDS=31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS=True
SECURE_HSTS_PRELOAD=True
SECURE_CONTENT_TYPE_NOSNIFF=True
SECURE_BROWSER_XSS_FILTER=True
X_FRAME_OPTIONS=DENY

# Cache (Redis)
# CACHE_URL=redis://redis:6379/1

# Logging
LOG_LEVEL=INFO

# Performance
CONN_MAX_AGE=60

# Rate Limiting
RATE_LIMIT=100/m

# Sentry (Error Tracking)
# SENTRY_DSN=your-sentry-dsn
